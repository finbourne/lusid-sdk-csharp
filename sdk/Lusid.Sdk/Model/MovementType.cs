/*
 * LUSID API
 *
 * Contact: info@finbourne.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Lusid.Sdk.Client.OpenAPIDateConverter;

namespace Lusid.Sdk.Model
{
    /// <summary>
    /// Defines MovementType
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum MovementType
    {
        /// <summary>
        /// Enum Settlement for value: Settlement
        /// </summary>
        [EnumMember(Value = "Settlement")]
        Settlement = 1,

        /// <summary>
        /// Enum Traded for value: Traded
        /// </summary>
        [EnumMember(Value = "Traded")]
        Traded = 2,

        /// <summary>
        /// Enum StockMovement for value: StockMovement
        /// </summary>
        [EnumMember(Value = "StockMovement")]
        StockMovement = 3,

        /// <summary>
        /// Enum FutureCash for value: FutureCash
        /// </summary>
        [EnumMember(Value = "FutureCash")]
        FutureCash = 4,

        /// <summary>
        /// Enum Commitment for value: Commitment
        /// </summary>
        [EnumMember(Value = "Commitment")]
        Commitment = 5,

        /// <summary>
        /// Enum Receivable for value: Receivable
        /// </summary>
        [EnumMember(Value = "Receivable")]
        Receivable = 6,

        /// <summary>
        /// Enum CashSettlement for value: CashSettlement
        /// </summary>
        [EnumMember(Value = "CashSettlement")]
        CashSettlement = 7,

        /// <summary>
        /// Enum CashForward for value: CashForward
        /// </summary>
        [EnumMember(Value = "CashForward")]
        CashForward = 8,

        /// <summary>
        /// Enum CashCommitment for value: CashCommitment
        /// </summary>
        [EnumMember(Value = "CashCommitment")]
        CashCommitment = 9,

        /// <summary>
        /// Enum CashReceivable for value: CashReceivable
        /// </summary>
        [EnumMember(Value = "CashReceivable")]
        CashReceivable = 10,

        /// <summary>
        /// Enum Accrual for value: Accrual
        /// </summary>
        [EnumMember(Value = "Accrual")]
        Accrual = 11,

        /// <summary>
        /// Enum CashAccrual for value: CashAccrual
        /// </summary>
        [EnumMember(Value = "CashAccrual")]
        CashAccrual = 12,

        /// <summary>
        /// Enum ForwardFx for value: ForwardFx
        /// </summary>
        [EnumMember(Value = "ForwardFx")]
        ForwardFx = 13,

        /// <summary>
        /// Enum CashFxForward for value: CashFxForward
        /// </summary>
        [EnumMember(Value = "CashFxForward")]
        CashFxForward = 14,

        /// <summary>
        /// Enum UnsettledCashTypes for value: UnsettledCashTypes
        /// </summary>
        [EnumMember(Value = "UnsettledCashTypes")]
        UnsettledCashTypes = 15,

        /// <summary>
        /// Enum Carry for value: Carry
        /// </summary>
        [EnumMember(Value = "Carry")]
        Carry = 16,

        /// <summary>
        /// Enum CarryAsPnl for value: CarryAsPnl
        /// </summary>
        [EnumMember(Value = "CarryAsPnl")]
        CarryAsPnl = 17,

        /// <summary>
        /// Enum VariationMargin for value: VariationMargin
        /// </summary>
        [EnumMember(Value = "VariationMargin")]
        VariationMargin = 18,

        /// <summary>
        /// Enum Capital for value: Capital
        /// </summary>
        [EnumMember(Value = "Capital")]
        Capital = 19,

        /// <summary>
        /// Enum Fee for value: Fee
        /// </summary>
        [EnumMember(Value = "Fee")]
        Fee = 20,

        /// <summary>
        /// Enum LimitAdjustment for value: LimitAdjustment
        /// </summary>
        [EnumMember(Value = "LimitAdjustment")]
        LimitAdjustment = 21,

        /// <summary>
        /// Enum BalanceAdjustment for value: BalanceAdjustment
        /// </summary>
        [EnumMember(Value = "BalanceAdjustment")]
        BalanceAdjustment = 22
    }

}
