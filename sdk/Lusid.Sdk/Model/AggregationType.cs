/*
 * LUSID API
 *
 * Contact: info@finbourne.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Lusid.Sdk.Client.OpenAPIDateConverter;

namespace Lusid.Sdk.Model
{
    /// <summary>
    /// A list of types, that define the expected output types found from an aggregation request in its result.
    /// </summary>
    /// <value>A list of types, that define the expected output types found from an aggregation request in its result.</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum AggregationType
    {
        /// <summary>
        /// Enum String for value: String
        /// </summary>
        [EnumMember(Value = "String")]
        String = 1,

        /// <summary>
        /// Enum Int for value: Int
        /// </summary>
        [EnumMember(Value = "Int")]
        Int = 2,

        /// <summary>
        /// Enum Decimal for value: Decimal
        /// </summary>
        [EnumMember(Value = "Decimal")]
        Decimal = 3,

        /// <summary>
        /// Enum DateTime for value: DateTime
        /// </summary>
        [EnumMember(Value = "DateTime")]
        DateTime = 4,

        /// <summary>
        /// Enum Boolean for value: Boolean
        /// </summary>
        [EnumMember(Value = "Boolean")]
        Boolean = 5,

        /// <summary>
        /// Enum ResultValue for value: ResultValue
        /// </summary>
        [EnumMember(Value = "ResultValue")]
        ResultValue = 6,

        /// <summary>
        /// Enum Result0D for value: Result0D
        /// </summary>
        [EnumMember(Value = "Result0D")]
        Result0D = 7,

        /// <summary>
        /// Enum Json for value: Json
        /// </summary>
        [EnumMember(Value = "Json")]
        Json = 8
    }

}
