/*
 * LUSID API
 *
 * Contact: info@finbourne.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Lusid.Sdk.Client.OpenAPIDateConverter;

namespace Lusid.Sdk.Model
{
    /// <summary>
    /// Defines ScheduleType
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ScheduleType
    {
        /// <summary>
        /// Enum FixedSchedule for value: FixedSchedule
        /// </summary>
        [EnumMember(Value = "FixedSchedule")]
        FixedSchedule = 1,

        /// <summary>
        /// Enum FloatSchedule for value: FloatSchedule
        /// </summary>
        [EnumMember(Value = "FloatSchedule")]
        FloatSchedule = 2,

        /// <summary>
        /// Enum OptionalitySchedule for value: OptionalitySchedule
        /// </summary>
        [EnumMember(Value = "OptionalitySchedule")]
        OptionalitySchedule = 3,

        /// <summary>
        /// Enum StepSchedule for value: StepSchedule
        /// </summary>
        [EnumMember(Value = "StepSchedule")]
        StepSchedule = 4,

        /// <summary>
        /// Enum Exercise for value: Exercise
        /// </summary>
        [EnumMember(Value = "Exercise")]
        Exercise = 5,

        /// <summary>
        /// Enum FxRateSchedule for value: FxRateSchedule
        /// </summary>
        [EnumMember(Value = "FxRateSchedule")]
        FxRateSchedule = 6,

        /// <summary>
        /// Enum FxLinkedNotionalSchedule for value: FxLinkedNotionalSchedule
        /// </summary>
        [EnumMember(Value = "FxLinkedNotionalSchedule")]
        FxLinkedNotionalSchedule = 7,

        /// <summary>
        /// Enum Invalid for value: Invalid
        /// </summary>
        [EnumMember(Value = "Invalid")]
        Invalid = 8

    }

}
