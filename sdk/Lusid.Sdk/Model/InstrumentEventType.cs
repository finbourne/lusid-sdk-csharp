/*
 * LUSID API
 *
 * Contact: info@finbourne.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Lusid.Sdk.Client.OpenAPIDateConverter;

namespace Lusid.Sdk.Model
{
    /// <summary>
    /// The individual event types.
    /// </summary>
    /// <value>The individual event types.</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum InstrumentEventType
    {
        /// <summary>
        /// Enum TransitionEvent for value: TransitionEvent
        /// </summary>
        [EnumMember(Value = "TransitionEvent")]
        TransitionEvent = 1,

        /// <summary>
        /// Enum InformationalEvent for value: InformationalEvent
        /// </summary>
        [EnumMember(Value = "InformationalEvent")]
        InformationalEvent = 2,

        /// <summary>
        /// Enum OpenEvent for value: OpenEvent
        /// </summary>
        [EnumMember(Value = "OpenEvent")]
        OpenEvent = 3,

        /// <summary>
        /// Enum CloseEvent for value: CloseEvent
        /// </summary>
        [EnumMember(Value = "CloseEvent")]
        CloseEvent = 4,

        /// <summary>
        /// Enum StockSplitEvent for value: StockSplitEvent
        /// </summary>
        [EnumMember(Value = "StockSplitEvent")]
        StockSplitEvent = 5,

        /// <summary>
        /// Enum BondDefaultEvent for value: BondDefaultEvent
        /// </summary>
        [EnumMember(Value = "BondDefaultEvent")]
        BondDefaultEvent = 6,

        /// <summary>
        /// Enum CashDividendEvent for value: CashDividendEvent
        /// </summary>
        [EnumMember(Value = "CashDividendEvent")]
        CashDividendEvent = 7,

        /// <summary>
        /// Enum AmortisationEvent for value: AmortisationEvent
        /// </summary>
        [EnumMember(Value = "AmortisationEvent")]
        AmortisationEvent = 8,

        /// <summary>
        /// Enum CashFlowEvent for value: CashFlowEvent
        /// </summary>
        [EnumMember(Value = "CashFlowEvent")]
        CashFlowEvent = 9,

        /// <summary>
        /// Enum ExerciseEvent for value: ExerciseEvent
        /// </summary>
        [EnumMember(Value = "ExerciseEvent")]
        ExerciseEvent = 10,

        /// <summary>
        /// Enum ResetEvent for value: ResetEvent
        /// </summary>
        [EnumMember(Value = "ResetEvent")]
        ResetEvent = 11,

        /// <summary>
        /// Enum TriggerEvent for value: TriggerEvent
        /// </summary>
        [EnumMember(Value = "TriggerEvent")]
        TriggerEvent = 12,

        /// <summary>
        /// Enum RawVendorEvent for value: RawVendorEvent
        /// </summary>
        [EnumMember(Value = "RawVendorEvent")]
        RawVendorEvent = 13,

        /// <summary>
        /// Enum InformationalErrorEvent for value: InformationalErrorEvent
        /// </summary>
        [EnumMember(Value = "InformationalErrorEvent")]
        InformationalErrorEvent = 14,

        /// <summary>
        /// Enum BondCouponEvent for value: BondCouponEvent
        /// </summary>
        [EnumMember(Value = "BondCouponEvent")]
        BondCouponEvent = 15,

        /// <summary>
        /// Enum DividendReinvestmentEvent for value: DividendReinvestmentEvent
        /// </summary>
        [EnumMember(Value = "DividendReinvestmentEvent")]
        DividendReinvestmentEvent = 16,

        /// <summary>
        /// Enum AccumulationEvent for value: AccumulationEvent
        /// </summary>
        [EnumMember(Value = "AccumulationEvent")]
        AccumulationEvent = 17,

        /// <summary>
        /// Enum BondPrincipalEvent for value: BondPrincipalEvent
        /// </summary>
        [EnumMember(Value = "BondPrincipalEvent")]
        BondPrincipalEvent = 18,

        /// <summary>
        /// Enum DividendOptionEvent for value: DividendOptionEvent
        /// </summary>
        [EnumMember(Value = "DividendOptionEvent")]
        DividendOptionEvent = 19,

        /// <summary>
        /// Enum MaturityEvent for value: MaturityEvent
        /// </summary>
        [EnumMember(Value = "MaturityEvent")]
        MaturityEvent = 20,

        /// <summary>
        /// Enum FxForwardSettlementEvent for value: FxForwardSettlementEvent
        /// </summary>
        [EnumMember(Value = "FxForwardSettlementEvent")]
        FxForwardSettlementEvent = 21

    }

}
