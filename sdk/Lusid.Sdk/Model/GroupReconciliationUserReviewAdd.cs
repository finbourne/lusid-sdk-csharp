/*
 * LUSID API
 *
 * Contact: info@finbourne.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Lusid.Sdk.Client.OpenAPIDateConverter;

namespace Lusid.Sdk.Model
{
    /// <summary>
    /// GroupReconciliationUserReviewAdd
    /// </summary>
    [DataContract(Name = "GroupReconciliationUserReviewAdd")]
    public partial class GroupReconciliationUserReviewAdd : IEquatable<GroupReconciliationUserReviewAdd>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GroupReconciliationUserReviewAdd" /> class.
        /// </summary>
        /// <param name="breakCode">The break code of the reconciliation result..</param>
        /// <param name="matchKey">The match key of the reconciliation result..</param>
        /// <param name="commentText">User&#39;s comment regarding the reconciliation result..</param>
        public GroupReconciliationUserReviewAdd(string breakCode = default(string), string matchKey = default(string), string commentText = default(string))
        {
            this.BreakCode = breakCode;
            this.MatchKey = matchKey;
            this.CommentText = commentText;
        }

        /// <summary>
        /// The break code of the reconciliation result.
        /// </summary>
        /// <value>The break code of the reconciliation result.</value>
        [DataMember(Name = "breakCode", EmitDefaultValue = true)]
        public string BreakCode { get; set; }

        /// <summary>
        /// The match key of the reconciliation result.
        /// </summary>
        /// <value>The match key of the reconciliation result.</value>
        [DataMember(Name = "matchKey", EmitDefaultValue = true)]
        public string MatchKey { get; set; }

        /// <summary>
        /// User&#39;s comment regarding the reconciliation result.
        /// </summary>
        /// <value>User&#39;s comment regarding the reconciliation result.</value>
        [DataMember(Name = "commentText", EmitDefaultValue = true)]
        public string CommentText { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GroupReconciliationUserReviewAdd {\n");
            sb.Append("  BreakCode: ").Append(BreakCode).Append("\n");
            sb.Append("  MatchKey: ").Append(MatchKey).Append("\n");
            sb.Append("  CommentText: ").Append(CommentText).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GroupReconciliationUserReviewAdd);
        }

        /// <summary>
        /// Returns true if GroupReconciliationUserReviewAdd instances are equal
        /// </summary>
        /// <param name="input">Instance of GroupReconciliationUserReviewAdd to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GroupReconciliationUserReviewAdd input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.BreakCode == input.BreakCode ||
                    (this.BreakCode != null &&
                    this.BreakCode.Equals(input.BreakCode))
                ) && 
                (
                    this.MatchKey == input.MatchKey ||
                    (this.MatchKey != null &&
                    this.MatchKey.Equals(input.MatchKey))
                ) && 
                (
                    this.CommentText == input.CommentText ||
                    (this.CommentText != null &&
                    this.CommentText.Equals(input.CommentText))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BreakCode != null)
                {
                    hashCode = (hashCode * 59) + this.BreakCode.GetHashCode();
                }
                if (this.MatchKey != null)
                {
                    hashCode = (hashCode * 59) + this.MatchKey.GetHashCode();
                }
                if (this.CommentText != null)
                {
                    hashCode = (hashCode * 59) + this.CommentText.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
