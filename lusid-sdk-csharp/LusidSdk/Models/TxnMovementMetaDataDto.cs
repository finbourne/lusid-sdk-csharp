// <auto-generated>
// Copyright Â© 2018 FINBOURNE TECHNOLOGY LTD
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
// IN THE SOFTWARE.
// </auto-generated>

namespace Finbourne.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class TxnMovementMetaDataDto
    {
        /// <summary>
        /// Initializes a new instance of the TxnMovementMetaDataDto class.
        /// </summary>
        public TxnMovementMetaDataDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TxnMovementMetaDataDto class.
        /// </summary>
        /// <param name="movementTypes">The Movement Types. Possible values
        /// include: 'Settlement', 'Traded', 'ForwardFx', 'Commitment',
        /// 'Receivable', 'CashSettlement', 'Accrual',
        /// 'UnsettledCashTypes'</param>
        /// <param name="side">The Movement Side. Possible values include:
        /// 'Side1', 'Side2', 'BondInt'</param>
        /// <param name="direction">The Movement direction</param>
        public TxnMovementMetaDataDto(string movementTypes = default(string), string side = default(string), int? direction = default(int?), IList<PropertyDto> properties = default(IList<PropertyDto>), IList<TxnPropertyMappingDto> mappings = default(IList<TxnPropertyMappingDto>))
        {
            MovementTypes = movementTypes;
            Side = side;
            Direction = direction;
            Properties = properties;
            Mappings = mappings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the Movement Types. Possible values include:
        /// 'Settlement', 'Traded', 'ForwardFx', 'Commitment', 'Receivable',
        /// 'CashSettlement', 'Accrual', 'UnsettledCashTypes'
        /// </summary>
        [JsonProperty(PropertyName = "movementTypes")]
        public string MovementTypes { get; set; }

        /// <summary>
        /// Gets or sets the Movement Side. Possible values include: 'Side1',
        /// 'Side2', 'BondInt'
        /// </summary>
        [JsonProperty(PropertyName = "side")]
        public string Side { get; set; }

        /// <summary>
        /// Gets or sets the Movement direction
        /// </summary>
        [JsonProperty(PropertyName = "direction")]
        public int? Direction { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public IList<PropertyDto> Properties { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mappings")]
        public IList<TxnPropertyMappingDto> Mappings { get; set; }

    }
}
